# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
      - "master"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4    
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Create JAR file
      run: ./gradlew jar

    - name: Archive JAR
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/*-shadow.jar
        if-no-files-found: error
  
  release:
    needs: build
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v4    
    
    - name: Create required package.json
      run: test -f package.json || echo '{}' >package.json
      
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: changelog
        
    - name: Download JAR from build
      id: download
      uses: actions/download-artifact@v4

    - name: Get Short Commit SHA
      id: shortsha
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV    
      
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: dev-build-${{ env.short_sha }}
        release_name: dev-build-${{ env.short_sha }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: true
       
    - name: give permission
      run: chmod -R 777 "${{ github.workspace }}/artifact"

    - name: Print File System
      run: ls -la "${{ github.workspace }}/artifact"

    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.download.outputs.download-path }}
        asset_name: dev-build-${{ env.short_sha }}.jar
        asset_content_type: application/java-archive

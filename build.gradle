plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.parchmentmc.org/" }
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://libraries.minecraft.net/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${parchment_version}@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.2.1")
	modImplementation files('libs/wynntils-2.0.0-beta.15-fabric+MC-1.21.jar')

	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.2'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.17.2'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {
		maven {
			url "file:///${project.projectDir}/mcmodsrepo"
		}
	}
}

loom {
	mixin {
		add(sourceSets.main, "wynnventory_mod.mixins.json")
	}
}

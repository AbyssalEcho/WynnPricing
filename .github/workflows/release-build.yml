# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.set_version.outputs.version }}
      jarName: ${{ steps.make_unique.outputs.jar_name }}

    steps:
    - uses: actions/checkout@v4

    - name: Set version number
      id: set_version
      run: echo "::set-output name=version::${GITHUB_REF_NAME#v}"

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Make filename unique
      id: make_unique
      run: |
        jar_name="Wynnventory-${{ steps.set_version.outputs.version }}.jar"
        mv build/libs/*-shadow.jar build/libs/$jar_name
        echo "::set-output name=jar_name::$jar_name"

    - name: Archive JAR
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/${{ steps.make_unique.outputs.jar_name }}
        name: ${{ steps.make_unique.outputs.jar_name }}
        if-no-files-found: error
  
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:      
    - name: Download JAR from build
      id: download
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.jarName }}
        path: ${{ github.workspace }}

    - name: Print Filesystem
      run: "ls -la ${{ github.workspace }}"

    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}/${{ needs.build.outputs.jarName }}
        asset_name: ${{ needs.build.outputs.jarName }}
        asset_content_type: application/java-archive
    
    - name: Get Release Changelog
      id: get_changelog
      uses: actions/github-script@v6
      with:
        script: |
          const release = context.payload.release;
          return release.body || "No changelog provided.";
    
    - name: Create Modrinth Version
      run: |
        JSON_PAYLOAD=$(cat <<EOF
        {
          "name": "WynnVentory ${{ needs.build.outputs.version }}",
          "version_number": "${{ needs.build.outputs.version }}",
          "changelog": ${{ steps.get_changelog.outputs.result }},
          "dependencies": [
            {
              "version_id": "oGwyXeEI",
              "file_name": "fabric-api-0.102.1+1.21.1.jar",
              "dependency_type": "required"
            },
            {
              "project_id": "dU5Gb9Ab",
              "dependency_type": "required"
            }
          ],
          "game_versions": [
            "1.21",
            "1.21.1"
          ],
          "version_type": "release",
          "loaders": [
            "fabric"
          ],
          "featured": true,
          "status": "listed",
          "requested_status": "listed",
          "project_id": "CORVJbiT",
          "file_parts": ["jarFile"],
          "primary_file": "jarFile"
        }
        EOF
        )
    
        curl -X POST "https://api.modrinth.com/v2/version" \
          -H "Authorization: TokenAuth ${{ secrets.MODRINTH_TOKEN }}" \
          -F "data=$JSON_PAYLOAD" \
          -F "jarFile=@${{ github.workspace }}/${{ needs.build.outputs.jarName }};type=application/java-archive"
